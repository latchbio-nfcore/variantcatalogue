/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    //
    // Subworkflow : Mapping
    //


    withName: FASTQC {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/QC/FastQC/" },
                mode: params.publish_dir_mode,
                pattern: '*'
            ]
        ]
        ext.args = '--quiet'
    }

    withName: TRIMMOMATIC {
        publishDir = [
            enabled: false
        ]
	ext.args2 = 'ILLUMINACLIP:TruSeq3-PE.fa:2:30:10:2:True LEADING:3 TRAILING:3 MINLEN:36'
    }
    
    withName: 'BWA_INDEX' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'BWA_MEM|SAMTOOLS_INDEX' {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/Bam/" },
                mode: params.publish_dir_mode,
                pattern: '*'
            ]
        ]
    }

    withName: 'MOSDEPTH' {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/QC/Mosdepth/" },
                mode: params.publish_dir_mode,
                pattern: '*'
            ]
        ]
    }

    withName: 'PICARD_COLLECTWGSMETRICS|Picard_CollectAlignmentSummaryMetrics|Picard_QualityScoreDistribution' {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/QC/Picard/" },
                mode: params.publish_dir_mode,
                pattern: '*'
            ]
        ]
    }


    //
    // Subworkflow : SNV/indel
    //


    withName: DEEPVARIANT {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/SNV/Sample/" },
                mode: params.publish_dir_mode,
                pattern: '*'
            ]
        ]
        ext.args = '--model_type=WGS --intermediate_results_dir .'
    }

    withName: GLNEXUS {
        publishDir = [
            enabled: false
        ]
        ext.args = '--config DeepVariantWGS'
    }


    withName: TABIX_TABIX {
        publishDir = [
            enabled: false
        ]
    }

    withName: BCFTOOLS_NORM {
        publishDir = [
            enabled: false
        ]
        ext.args = '-m -any'
    }

    withName: BCFTOOLS_ANNOTATE {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/SNV/" },
                mode: params.publish_dir_mode,
                pattern: '*'
            ]
        ]
        ext.args = '--set-id "%CHROM\\_%POS\\_%REF\\_%FIRST_ALT" -O z'
    }

    withName: Hail_sample_QC {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/QC/Aggregated/Hail/Samples/" },
                mode: params.publish_dir_mode,
                pattern: '*.html'
            ],
            [
                path: { "${params.outdir}/Individual/vcf_post_hail/" },
                mode: params.publish_dir_mode,
                pattern: '*filtered_samples.vcf.bgz'
            ]
        ]
    }

    withName: Hail_variant_QC {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/QC/Aggregated/Hail/Variants/SNV/" },
                mode: params.publish_dir_mode,
                pattern: '*.html'
            ],
            [
                path: { "${params.outdir}/Individual/QC/Aggregated/Hail/Variants/SNV/" },
                mode: params.publish_dir_mode,
                pattern: 'SNV_indel_QC_report.txt'
            ],
            [
                path: { "${params.outdir}/Individual/vcf_post_hail/" },
                mode: params.publish_dir_mode,
                pattern: 'SNV_filtered_with_geno*'
            ],
            [
                path: { "${params.outdir}/Population/SNV/Vcf_pre_annotation/" },
                mode: params.publish_dir_mode,
                pattern: 'SNV_filtered_frequ_only*'
            ]
        ]
    }

    withName: ENSEMBLVEP_VEP {
        publishDir = [
            [
                path: { "${params.outdir}/Population/SNV/VEP_annotation/" },
                mode: params.publish_dir_mode,
                pattern: '*_annotation_table_merged*'
            ],
            [
                path: { "${params.outdir}/Population/QC/SNV/" },
                mode: params.publish_dir_mode,
                pattern: '*_VEP_merged_stats*'
            ]
        ]
    }



    //
    // Subworkflow : MT
    //

    withName: 'BWA_INDEX_MT|BWA_INDEX_MT_sifted' {
        publishDir = [
            enabled: false
        ]
    }

    withName: GATK4_PRINTREADS {
        publishDir = [
            enabled: false
        ]
        ext.args = '-L chrM --read-filter MateOnSameContigOrNoMappedMateReadFilter --read-filter MateUnmappedAndUnmappedReadFilter'
    }
//-L params.Mitochondrial_chromosome

    withName: GATK4_SAMTOFASTQ {
        publishDir = [
            enabled: false
        ]
        ext.args = '-NON_PF true'
    }
//--INTERLEAVE true

    withName: 'BWA_MEM_MT|BWA_MEM_MT_shifted|SAMTOOLS_INDEX_MT|SAMTOOLS_INDEX_MT_shifted' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'GATK4_MARKDUPLICATES|GATK4_MARKDUPLICATES_shifted' {
        publishDir = [
            enabled: false
        ]
        ext.args = '--CREATE_INDEX true'
        ext.prefix = { "${meta.id}_MD.bam" }
    }

    withName: 'PICARD_COLLECTHSMETRICS_MT|PICARD_COLLECTHSMETRICS_MT_shifted' {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/MT/QC/" },
                mode: params.publish_dir_mode,
                pattern: '*'
            ]
        ]
        ext.args = '--SAMPLE_SIZE 1'
    }

    withName: 'GATK4_MUTECT2|GATK4_MUTECT2_shifted' {
        publishDir = [
            enabled: false
        ]
        ext.args = '-L chrM --mitochondria-mode --annotation StrandBiasBySample --max-reads-per-alignment-start 75 --max-mnp-distance 0'
    }

    withName: 'MT_Liftover' {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/MT/QC/Liftover/" },
                mode: params.publish_dir_mode,
                pattern: '*_rejected_variants.vcf'
            ]
        ]
    }

    withName: 'GATK4_MERGEVCFS|TABIX_TABIX_MT|BCFTOOLS_NORM_MT|TABIX_TABIX_MT2|GATK4_MERGEMUTECTSTATS' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'GATK4_FILTERMUTECTCALLS' {
        publishDir = [
            enabled: false
        ]
        ext.args = '--max-alt-allele-count 4 --mitochondria-mode'
    }  

    withName: 'GATK4_LEFTALIGNANDTRIMVARIANTS' {
        publishDir = [
            enabled: false
        ]
        ext.args = '--split-multi-allelics --dont-trim-alleles --keep-original-ac'
    }

    withName: 'GATK4_VARIANTFILTRATION' {
        publishDir = [
            [
                path: { "${params.outdir}/Individual/MT/Sample/" },
                mode: params.publish_dir_mode,
                pattern: '*_filtered_sites.vcf.gz*'
            ]
        ]
    }













    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
